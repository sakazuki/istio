  name: Release istio containers
  on:
    workflow_dispatch:
    push:
      tags:
        - '[0-9]+.[0-9]+.[0-9]+'
  concurrency: istio-release

  jobs:
    publish:
      if: github.repository == 'sakazuki/istio'
      runs-on: ubuntu-latest
      # strategy:
      #   matrix:
      #     include:
      #       - image: proxyv2
      #         context: ./pilot/docker/Dockerfile.proxyv2
      #         dockerfile: ./pilot/docker/Dockerfile.proxyv2
      #       - image: pilot
      #         context: ./pilot/docker
      #         dockerfile: ./pilot/docker/Dockerfile.pilot
      #       - image: istioctl
      #         context: ./istioctl/docker
      #         dockerfile: ./istioctl/docker/Dockerfile.istioctl
      #       - image: operator
      #         context: ./operator/docker
      #         dockerfile: ./operator/docker/Dockerfile.operator
      #       - image: install-cni
      #         context: ./cni/deployments/kubernetes
      #         dockerfile: ./cni/deployments/kubernetes/Dockerfile.install-cni
      #       - image: ext-authz
      #         context: ./samples/extauthz/docker
      #         dockerfile: ./samples/extauthz/docker/Dockerfile

      steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      # - name: Container metadata
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: sakazuki/${{ matrix.image }}
      #     tags: |
      #       type=raw,value=latest

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        run: |
          export TARGET_ARCH=arm64
          export TARGETARCH=linux_arm64
          make init build-linux docker.push
      
      # - name: Build and push
      #   uses: docker/bake-action@master
      #   with:
      #     files: ./tools/docker.yaml
      #     targets: proxyv2,pilot,istioctl,operator,install-cni
      #     push: true

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ${{ matrix.context }}
      #     file: ${{ matrix.dockerfile }}
      #     platforms: linux/amd64,linux/arm64
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}